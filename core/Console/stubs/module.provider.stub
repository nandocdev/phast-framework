<?php
/**
 * @package     phast/app
 * @subpackage  Modules/{{MODULE_NAME}}/Providers
 * @file        {{MODULE_NAME}}ServiceProvider
 * @author      Generated by Phast Framework
 * @date        {{DATE}}
 * @version     1.0.0
 * @description Service provider for {{MODULE_NAME}} module
 */

declare(strict_types=1);

namespace Phast\App\Modules\{{MODULE_NAME}}\Providers;

use League\Container\ServiceProvider\AbstractServiceProvider;
use Phast\App\Modules\{{MODULE_NAME}}\Models\Repositories\{{MODULE_NAME}}Repository;
use Phast\App\Modules\{{MODULE_NAME}}\Services\{{MODULE_NAME}}Service;

class {{MODULE_NAME}}ServiceProvider extends AbstractServiceProvider
{
    protected $provides = [
        {{MODULE_NAME}}Repository::class,
        {{MODULE_NAME}}Service::class,
    ];

    public function register(): void
    {
        // Register repository
        $this->container->add({{MODULE_NAME}}Repository::class);

        // Register service with repository dependency
        $this->container->add({{MODULE_NAME}}Service::class)
            ->addArgument({{MODULE_NAME}}Repository::class);
    }

    public function boot(): void
    {
        // Bootstrap module (called after all providers are registered)
        
        // Example: Register event listeners, setup module configuration, etc.
    }
}
