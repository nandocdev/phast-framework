<?php
/**
 * @package     phast/app
 * @subpackage  Modules/Product/Providers
 * @file        ProductServiceProvider
 * @author      Generated by Phast Framework
 * @date        2025-07-05
 * @version     1.0.0
 * @description Service provider for Product module
 */

declare(strict_types=1);

namespace Phast\App\Modules\Product\Providers;

use League\Container\ServiceProvider\AbstractServiceProvider;
use Phast\App\Modules\Product\Models\Repositories\ProductRepository;
use Phast\App\Modules\Product\Services\ProductService;

class ProductServiceProvider extends AbstractServiceProvider
{
    protected $provides = [
        ProductRepository::class,
        ProductService::class,
    ];

    public function register(): void
    {
        // Register repository
        $this->container->add(ProductRepository::class);

        // Register service with repository dependency
        $this->container->add(ProductService::class)
            ->addArgument(ProductRepository::class);
    }

    public function boot(): void
    {
        // Bootstrap module (called after all providers are registered)
        
        // Example: Register event listeners, setup module configuration, etc.
    }
}
